@import url("https://fonts.googleapis.com/css2?family=Caveat&family=Mountains+of+Christmas&family=Roboto:wght@100&family=Rubik+Bubbles&display=swap");

@import url('https://fonts.googleapis.com/css2?family=Amatic+SC&family=Caveat&family=Mountains+of+Christmas&family=Roboto:wght@100&family=Rubik+Bubbles&display=swap');

@import url('https://fonts.googleapis.com/css2?family=Amatic+SC&family=Caveat&family=Festive&family=Mountains+of+Christmas&family=Roboto:wght@100&family=Rubik+Bubbles&family=Rubik+Doodle+Shadow&family=Rubik+Lines&display=swap');

:root {
  /* colors */
  --white: #ffffff;
  --green: #749d4c;
  --coffee: #43281c;
  --vanilla: #f1e3d3;
  --lemon: #fbf2c0;
  --mocha: #7f4f24;
  --tan: #ddb892;
  --blue: #3e80b6;
  --background: #2E2E2E;
  --stroke: #444444;
  --accent: #FF6F61;

  /* fonts */
  --decorative: "monospace", "Montserrat", sans-serif;
  --sans: "monospace", "Open Sans", sans-serif;

  /* font scale */
  --base-size: 1.2rem;
  --scale: 1.25;
  --h6: var(--base-size);
  --xl: calc(var(--h1)*var(--scale)*var(--scale));
  --lg: calc(var(--h1)*var(--scale));
  --h1: calc(var(--h2)*var(--scale));
  --h2: calc(var(--h3)*var(--scale));
  --h3: calc(var(--h4)*var(--scale));
  --h4: calc(var(--h5)*var(--scale));
  --h5: calc(var(--h6)*var(--scale));
  --h6: var(--base-size);
  --small: calc(var(--base-size)/ var(--scale));


}

/* add border box sizing to the page */
html {
  box-sizing: border-box;
}

*,
*:before,
*:after {
  box-sizing: inherit;
  background-color: var(--background);
}

/* using the above variables and the HTML specified above, write CSS to style headings, text, links, images, figures, etc. */
body {
  font-family: var(--sans);
  line-height: 1;
  background-color: var(--background);
  color: var(--white);
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

h1,
h2,
h3,
.h1,
.h2,
.h3 {
  font-weight: 400;
  font-family: var(--decorative);
  margin: 0.3rem 0;
}

img {
  max-width: 100%;
  border-radius: var(--radius);
}

figure {
  margin: 0;
}

a {
  color: var(--green);
}

a:hover {
  text-decoration: none;
}

header {
  background-color: var(--background);
  padding: 0.5rem 0;
  color: var(--white);
  height: 48px;

}

header h1 {
  color: var(--white);
  margin-bottom: 0;
}

.fancy-text {
  background: linear-gradient(135deg, var(--mocha) 0%, var(--tan) 100%);
  background-repeat: no-repeat;
  background-size: 100% 35%;
  background-position: 0 90%;
}

.colors>* {
  width: 5rem;
  height: 4rem;
  display: inline-block;
  text-align: center;
  padding: 1rem 0;
  margin: 1rem;
  border: 1px solid var(--coffee);
}

.white {
  background-color: var(--white);
}

.green {
  background-color: var(--green);
  color: var(--vanilla);
}

.coffee {
  background-color: var(--coffee);
  color: var(--vanilla);
}

.vanilla {
  background-color: var(--vanilla);

}

.lemon {
  background-color: var(--lemon);
}

.mocha {
  background-color: var(--mocha);
}

.tan {
  background-color: var(--tan);
}

.blue {
  background-color: var(--blue);
}

.preview h1 {
  font-size: 1.5rem;
}

.preview h2 {
  font-size: 1.3rem;
}

.preview h3 {
  font-size: 1.1rem;
}

.preview h4 {
  font-size: 1rem;
}

.preview h5 {
  font-size: 0.9rem;
}

.preview h6 {
  font-size: 0.8rem;
}

.preview p {
  font-size: 0.8rem;
}

.preview a {
  color: var(--lemon);
}

.preview a:hover {
  color: var(--blue);
}

.preview ul {
  list-style-type: disc;
}


/* Basic styling for code blocks */
pre {
  font-family: 'Courier New', monospace;
  font-size: 14px;
  background-color: var(--stroke);
  padding: 20px;
  border-radius: 4px;
  color: #f8f8f8;
  display: block;
  white-space: pre-wrap;
}

/* Styling for inline code */
pre code {
  display: inline;
  padding: 1.2rem 0.5rem;
  background-color: transparent;
  border-radius: 0;
}

p>code {
  background-color: var(--stroke);
  padding: 0.1rem 0.2rem;
  border-radius: 0.2rem;
  /*add red light color*/
  color: var(--accent);
  font-size: 0.7rem;
}

/* Styling for code blocks */

/* styling for blockquotes */
blockquote {
  border-left: 0.5rem solid var(--accent);
  padding-left: 1rem;
  margin-left: 0;
  font-style: italic;
  color: var(--accent);
}

blockquote>p {
  margin: 0;
}

blockquote>footer {
  font-style: normal;
  color: var(--accent);
}

blockquote>footer:before {
  content: "â€” ";
}

blockquote>footer:after {
  content: "";
}

blockquote>footer>cite {
  font-style: normal;
  font-weight: bold;
}

blockquote>footer>cite:before {
  content: "";
}

blockquote>footer>cite:after {
  content: "";
}

/* styling for blockquotes */

/* styling for lists */
ul {
  list-style-type: disc;
}

ol {
  list-style-type: decimal;
}

ol>li {
  font-size: 0.8rem;
}

ul>li {
  font-size: 0.8rem;
}

/* styling for lists */



.main-container {
  width: 100%;
  border: 1px solid var(--stroke);
}

/* .wrapper-for-list {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  border: 1px solid var(--stroke);
  margin: 1rem auto;
  flex: 1 0 auto;
} */

button {
  outline: none;
  border: none;
}

input {
  background-color: white;
}

button,
.btn {
  padding: 0.2rem 0.5rem;
  background-color: var(--white);
  color: #2e2e2e;
  font-weight: bold;
}

button:hover,
.btn:hover {
  background-color: var(--blue);
  color: var(--white);
  background-attachment: fixed;
}

input {
  padding: 0.2rem 0.5rem;
  font-size: 0.8rem;
  border: none;
  box-shadow: 0 0 15px 4px rgba(0, 0, 0, 0.06);
}

input:focus {
  outline: none;
  box-shadow: 0 0 10px 2px rgba(0, 0, 0, 0.1);
}

@keyframes glow {
  0% {
    opacity: 0.1;
  }

  50% {
    opacity: 1;
  }

  100% {
    opacity: 0.1;
  }
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.004);
  }

  100% {
    transform: scale(1);
  }
}

@keyframes blink {

  0%,
  100% {
    opacity: 1;
  }

  50% {
    opacity: 0.3;
  }
}

@keyframes flicker {

  0%,
  100% {
    opacity: 1;
  }

  10%,
  20%,
  30%,
  40%,
  50%,
  60%,
  70%,
  80%,
  90% {
    opacity: 0.1;
  }
}

/* Steady On */
@keyframes steadyOn {

  0%,
  100% {
    opacity: 1;
  }
}

/* Chasing Lights */
@keyframes chasingLights {

  0%,
  100% {
    transform: translateX(0);
  }

  50% {
    transform: translateX(100%);
  }
}

/* Blinking */
@keyframes blinking {

  0%,
  100% {
    opacity: 1;
  }

  50% {
    opacity: 0;
  }
}

/* Twinkling */
@keyframes twinkling {

  0%,
  100% {
    opacity: 1;
  }

  50% {
    opacity: 0.5;
  }
}

/* Color Fade */
@keyframes colorFade {
  from {
    filter: hue-rotate(0deg);
  }

  to {
    background-color: #444444;
  }


}

/* Rainbow Fade */
@keyframes rainbowFade {
  0% {
    filter: hue-rotate(0deg);
  }

  50% {
    filter: hue-rotate(180deg);
  }

  100% {
    filter: hue-rotate(360deg);
  }
}

/* Sparkle */
@keyframes sparkle {

  0%,
  100% {
    opacity: 1;
  }

  50% {
    opacity: 0.5;
  }
}

/* Wave Effect */
@keyframes waveEffect {

  0%,
  100% {
    transform: translateY(0);
  }

  50% {
    transform: translateY(10px);
  }
}

/* Crossfade */
@keyframes crossfade {

  0%,
  100% {
    opacity: 1;
  }

  50% {
    opacity: 0;
  }
}

/* Color Stacking */
@keyframes colorStacking {

  0%,
  100% {
    transform: translateY(0);
  }

  50% {
    transform: translateY(-10px);
  }
}

/* Cascading Lights */
@keyframes cascadingLights {

  0%,
  100% {
    transform: scaleY(1);
  }

  50% {
    transform: scaleY(0.5);
  }
}

/* Firework Effect */
@keyframes fireworkEffect {

  0%,
  100% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.5);
  }
}

/* Color Chase */
@keyframes colorChase {

  0%,
  100% {
    transform: translateX(0);
  }

  50% {
    transform: translateX(50px);
  }
}

/* Random Flashing */
@keyframes randomFlashing {

  0%,
  100% {
    opacity: 1;
  }

  25%,
  75% {
    opacity: 0;
  }

  50% {
    opacity: 1;
  }
}

/* Music Sync */
@keyframes musicSync {

  /* Add keyframes for music synchronization */
  /* You may need to use JavaScript to dynamically adjust properties based on the music beats */
  0%,
  100% {
    transform: scale(1);
  }
}